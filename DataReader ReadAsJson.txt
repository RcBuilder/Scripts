DataReader ReadAsJson
---------------------
create a dictionary (key-value pair) and use 'SerializeObject' method to convert it into json string. 

-

note! 
use [JsonProperty] attribute to map fields (also supports hebrew)

e.g: 
[JsonProperty(PropertyName = "מספר לקוח")]
public string ClientName { get; set; }

-

protected string ReadAsJson(DbDataReader dr) {
    if (dr == null || !dr.HasRows) return "[]";

    var results = new List<Dictionary<string, string>>();
    while (dr.Read())
    {
        var result = new Dictionary<string, string>();
        for (var i = 0; i < dr.VisibleFieldCount; i++)
            result.Add(dr.GetName(i), dr[i].ToString().Trim());
        results.Add(result);
    }

    return JsonConvert.SerializeObject(results);
}

protected T ReadAsT<T>(DbDataReader dr) {
    return JsonConvert.DeserializeObject<T>(this.ReadAsJson(dr));
}