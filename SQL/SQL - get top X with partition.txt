SQL - get top X with partition
------------------------------
use ROW_NUMBER and partition to get top X rows per item, can also add order by to define the top items order to obtain

in the example below, we'll get the top 3 most updated rows for each project.

sample
------
create table #temp(ProjectId int, [date] smalldatetime, [count] int) 
insert into #temp
values
(1, '2018-05-05', 20), 
(1, '2018-05-01', 21),
(1, '2018-05-03', 22), 
(2, '2018-05-03', 23), 
(2, '2018-05-06', 24),
(3, '2018-05-03', 25),
(3, '2018-05-01', 26),
(3, '2018-05-10', 27),
(3, '2018-05-08', 28)

;with cte(rowN, ProjectId, [date], [count]) as (
	select ROW_NUMBER() over (partition by Id order by [date] desc), * from #temp 
)
select * from cte where rowN < 3

drop table #temp

/*
	rowN		ProjectId	[date]				[count]
	1		1		2018-05-05 00:00:00		20
	2		1		2018-05-03 00:00:00		22
	1		2		2018-05-06 00:00:00		24
	2		2		2018-05-03 00:00:00		23
	1		3		2018-05-10 00:00:00		27
	2		3		2018-05-08 00:00:00		28
*/