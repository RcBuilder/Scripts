C# domain from URL
------------------

requirement:
copy the 'tld_names.dat' file to the project's folder!

---

using:
Console.WriteLine(NetDomain.GetDomainFromUrl("http://www.rcb.co.il/pageA"));  // rcb.co.il
Console.WriteLine(NetDomain.GetDomainFromUrl("http://www.abc.rcb.co.il/pageA"));  // rcb.co.il

---

code:
internal class NetDomain {
    static public string GetDomainFromUrl(string Url)
    {
        return GetDomainFromUrl(new Uri(Url));
    }

    static public string GetDomainFromUrl(Uri Url)
    {
        initializeTLD();

        if (Url == null) return null;
        var dotBits = Url.Host.Split('.');
        if (dotBits.Length == 1) return Url.Host;
        if (dotBits.Length == 2) return Url.Host;

        var bestMatch = "";
        foreach (var tld in DOMAINS)        
            if (Url.Host.EndsWith(tld, StringComparison.InvariantCultureIgnoreCase))
                if (tld.Length > bestMatch.Length) bestMatch = tld;
				
        if (string.IsNullOrEmpty(bestMatch))
            return Url.Host;
        
        var bestBits = bestMatch.Split('.');
        var inputBits = Url.Host.Split('.');
        var getLastBits = bestBits.Length + 1;
        bestMatch = "";
        for (int c = inputBits.Length - getLastBits; c < inputBits.Length; c++)
        {
            if (bestMatch.Length > 0) bestMatch += ".";
            bestMatch += inputBits[c];
        }

        return bestMatch;
    }

	static public List<String> DOMAINS = new List<String>();
    static private void initializeTLD()
    {
        if (DOMAINS.Count > 0) return;

        string line;
        StreamReader reader = File.OpenText("tld_names.dat");

        while ((line = reader.ReadLine()) != null)        
            if (!string.IsNullOrEmpty(line) && !line.StartsWith("//"))            
                DOMAINS.Add(line);                    
        reader.Close();
    }    
}