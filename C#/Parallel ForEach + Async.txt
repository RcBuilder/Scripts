Parallel ForEach + Async
------------------------

static void Main(string[] args) {
    MainAsync().Wait();            
    Console.WriteLine("DONE");
    Console.ReadKey();
}

async static Task MainAsync()
{
    var list = new[] {
        new { Id = 1, Name = "A", Delay = TimeSpan.FromSeconds(1.4) },
        new { Id = 2, Name = "B", Delay = TimeSpan.FromSeconds(3.1) },
        new { Id = 3, Name = "C", Delay = TimeSpan.FromSeconds(0.5) },
        new { Id = 4, Name = "D", Delay = TimeSpan.FromSeconds(0.6) },
        new { Id = 5, Name = "E", Delay = TimeSpan.FromSeconds(2.2) }
    }.ToList();
    
    Console.WriteLine("1st loop");
    Parallel.ForEach(list, item =>
    {
        Console.WriteLine($"#{item.Id} {item.Name}");
        Thread.Sleep(item.Delay);
        Console.WriteLine($"#{item.Id} COMPLETED");
    });
    
    Console.WriteLine("2nd loop");
    var tasks = list.Select(async item =>
    {
        Console.WriteLine($"#{item.Id} {item.Name}");
        await Task.Delay(item.Delay);
        Console.WriteLine($"#{item.Id} COMPLETED");
    });
    await Task.WhenAll(tasks);
}

output:
1st loop
#1 A
#4 D
#3 C
#5 E
#2 B
#3 COMPLETED
#4 COMPLETED
#1 COMPLETED
#5 COMPLETED
#2 COMPLETED

2nd loop
#1 A
#4 D
#3 C
#5 E
#2 B
#3 COMPLETED
#4 COMPLETED
#1 COMPLETED
#5 COMPLETED
#2 COMPLETED

DONE

---

NOTE: 
DO NOT use Parallel.ForEach with async Action!

Parallel.ForEach(list, async item =>
{
    Console.WriteLine($"#{item.Id} {item.Name}");
    await Task.Delay(item.Delay);
    Console.WriteLine($"#{item.Id} COMPLETED");
});   

#1 A
#4 D
#3 C
#5 E
#2 B
DONE
#3 COMPLETED
#4 COMPLETED
#1 COMPLETED
#5 COMPLETED
#2 COMPLETED