// Install-Package Selenium.WebDriver
// Install-Package Selenium.Chrome.WebDriver

// flags
// https://peter.sh/experiments/chromium-command-line-switches/


var chromeOptions = new ChromeOptions();
chromeOptions.AddArguments("headless"); // no UI
chromeOptions.AddArguments("blink-settings=imagesEnabled=false"); // disable images download

// using (var browser = new ChromeDriver(chromeOptions)) 
var browser = new ChromeDriver(chromeOptions);
browser.Navigate().GoToUrl("http://rcb.co.il");
var content = browser.PageSource;          
browser.Close();
browser.Dispose();

// performance
// when using the 'using' clause, the browser is closed so new instance will be opened each call - this costs a lot!
// its better to create a single ChromeDriver instance and re-used it multiple time till it has no use and only then - close it! 

// var screenshot = browser.GetScreenshot();
// screenshot.SaveAsFile("D:\\1.png");

// issue:
// flag 'blink-settings=imagesEnabled=false' also disable other sources such as ng-include

// error: 
// OpenQA.Selenium.DriverServiceNotFoundException
// Message=The chromedriver.exe file does not exist in the current directory or in a directory on the PATH environment variable. The driver can be downloaded at http://chromedriver.storage.googleapis.com/index.html.
// solution:
// MUST add the driver nuget package (Selenium.Chrome.WebDriver) to all the projects using it 
// it generates a 'chromedriver.exe' in the bin folder 
// if we add it ONLY to the BLL project - it'll be missing in the Root project!


// [Methods] return IWebElement
// FindElementByXPath - returns a single item
// FindElementsByXPath - collection
// FindElementsByClassName            
// FindElementsByCssSelector
// FindElementsById
// FindElementsByName
// FindElementsByLinkText
// FindElementsByPartialLinkText
// FindElementsByTagName


// [IWebElement]
// IWebElement.click()

/*
var items = browser.FindElementsByXPath("//ul[@class='ulCategories']/li");
foreach (var item in items)
    Console.WriteLine(item.Text);
*/

// browser.Keyboard.SendKeys("some content"); // send keys command
// browser.Keyboard.SendKeys(Keys.Enter); // send enter command