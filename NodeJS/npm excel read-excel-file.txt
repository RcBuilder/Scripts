excel read-excel-file
---------------------
read excel file

source:
https://www.npmjs.com/package/read-excel-file
https://gitlab.com/catamphetamine/read-excel-file

install:
> npm install --save read-excel-file

import:
const readXlsxFile = require('read-excel-file/node');

sample:
see 'Sources\Libraries'

using:
readXlsxFile('.\\test1.xlsx').then(rows => {
    /* 
        [ 
            [ 'A1', 'B1', 'C1', 'D1' ],
            [ 'A2', 'B2', 'C2', 'D2' ],
            [ 'A3', 'B3', 'C3', 'D3' ],
            [ 'A4', 'B4', 'C4', 'D4' ] 
        ]
    */
    console.log(rows);

    // rows[row][col]
    console.log(`A1: ${rows[0][0]}`);  // row 0, col 0
    console.log(`B1: ${rows[1][0]}`);  // row 1, col 0
    console.log(`B2: ${rows[1][1]}`);  // row 1, col 1
    console.log(`B3: ${rows[1][2]}`);  // row 1, col 2
});

-

// with json schema
const schema = {
    // map sheet header 'Column1' to json property 'col1'
    'Column1': { // sheet header name
        prop: 'col1',  // schema property name
        type: String   // schema property type
    },
    'Column2': {
        prop: 'col2',
        type: String
    },
    'Column3': {
        prop: 'col3',
        type: String
    },
    'Column4': {
        prop: 'col4',
        type: String
    }
};

readXlsxFile('.\\test2.xlsx', {schema}).then(({ rows, errors } /* { rows, errors } */) => {
    /*
        [ 
            { col1: 'A1', col2: 'A2', col3: 'A3', col4: 'A4' },
            { col1: 'B1', col2: 'B2', col3: 'B3', col4: 'B4' },
            { col1: 'C1', col2: 'C2', col3: 'C3', col4: 'C4' },
            { col1: 'D1', col2: 'D2', col3: 'D3', col4: 'D4' } 
        ]
    */
    console.log(rows);
    rows.forEach(row => console.log(`${row.col1}${row.col2}`));
});