Download Image Using Socket
---------------------------
also see 'SocketFileDownloader.cs'

---

var url = new Uri(ImageURL);
var requestHeaders =
        string.Format("GET {0} HTTP/1.1\r\n", url.ToString()) +
        string.Format("Host: {0}\r\n", url.Host) +
        "Connection: keep-alive\r\n" +
        "Accept: */*\r\n" +
        "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\r\n" +
        "Accept-Encoding: gzip, deflate, sdch\r\n" +
        "Accept-Language: en-US,en;q=0.9\r\n" +
        "Cache-Control: no-cache\r\n" +
        "\r\n"; // important! empty row - spacer

client.Connect(url.Host, 80);

byte[] writeBytes = Encoding.Default.GetBytes(requestHeaders);
client.Send(writeBytes);

var readBytes = new byte[10000000];
var bytesReceived = client.Receive(readBytes, readBytes.Length, SocketFlags.None);
var response = Encoding.Default.GetString(readBytes, 0, bytesReceived);

var dataIndex = response.IndexOf("\r\n\r\n") + 4;
var data = response.Substring(dataIndex);

/*
    HTTP/1.1 200 OK
    Accept-Ranges: bytes
    Content-Type: image/jpeg
    ETag: "f207e7-9c728-587f85825cd52"
    Last-Modified: Fri, 03 May 2019 09:26:24 GMT
    MyHeader: D=425 t=1556995161421281
    Server: Apache
    Content-Length: 640808
    Date: Tue, 07 May 2019 13:04:10 GMT
    Connection: keep-alive 
*/
var headers = response.Substring(0, dataIndex);

Match match = null;
match = Regex.Match(headers, @"^HTTPs?/[0-9\.]+ \s+ (?<code>\d+) \s+ (?<text>.*?)$", RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline | RegexOptions.IgnoreCase);
if (match != null && match.Success) {
    var statusCode = match.Groups["code"].Value.Trim();
    if (statusCode != "200")
        throw new Exception(string.Format("Request Error! {0} ({1})", match.Groups["text"].Value.Trim(), statusCode));
}

var isGZip = false;
match = Regex.Match(headers, @"^Content-Encoding: \s+ (?<enc>.*?)$", RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline | RegexOptions.IgnoreCase);
if (match != null && match.Success) {
    var encoding = match.Groups["enc"].Value;
    isGZip = encoding.Contains("gzip");
}

var dataBytes = Encoding.Default.GetBytes(data);
Stream dataStream = new MemoryStream(dataBytes);

if (isGZip)
	dataStream = new GZipStream(dataStream, CompressionMode.Decompress);

/*            
using (var content = new StreamReader(dataStream, Encoding.Default))
    response = content.ReadToEnd();
*/

using (var fs = new FileStream("D:\\1.jpg", FileMode.Create, FileAccess.Write))
dataStream.CopyTo(fs);         

-- OR --
                
var bitmap = new Bitmap(dataStream);
bitmap.Save("D:\\1.jpg");