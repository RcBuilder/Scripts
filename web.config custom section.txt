web.config custom section
=========================

** web.config **

<?xml version="1.0"?>

<configuration>
  <configSections>
    <section name="MailSection" type="ConfigSections.MailSection"/>
    <section name="PayPalSection" type="ConfigSections.PayPalSection"/>
  </configSections>
  <MailSection configSource="web.sections.mail.config" />
  <PayPalSection configSource="web.sections.paypal.config" />
  <appSettings file="web.keys.config"/>
  <system.web>
    <compilation debug="true" targetFramework="4.0"/>
  </system.web>
</configuration>

------------------------------------------------------------------------

** web.keys.config **

<appSettings>
  <add key="ConnectionString" value="Data Source=;Initial Catalog=;Trusted_Connection=true" />
  <add key="SiteURL" value="" />
  <add key="DEBUG" value="1" />
</appSettings>

------------------------------------------------------------------------

** web.sections.mail.config **

<MailSection>
  <From></From>
  <To></To>
  <Bcc></Bcc>
  <DisplayName></DisplayName>
  <PORT></PORT>
  <SMTP></SMTP>
  <UserName></UserName>
  <UserPass></UserPass>
  <Encoding></Encoding>
</MailSection>

------------------------------------------------------------------------

** web.sections.paypal.config **

<PayPalSection>
  <URL>https://www.paypal.com/cgi-bin/webscr</URL>
  <Business>RcBuilder@walla.com</Business>
  <ItemName>Deposit</ItemName>
</PayPalSection>

========================================================================

** Config.cs **

using System;
using System.Configuration;
using ConfigSections;

namespace Config
{
    public class Keys
    {
        #region DM:
        public static string ConnectionString { set; get; }
        public static string SiteURL { set; get; }
        public static bool DEBUG { set; get; }
        public static MailSection mailSection { set; get; }
        public static PayPalSection paypalSection { set; get; }
        #endregion

        #region Load:
        public static void Load()
        {
            ConnectionString = ConfigurationManager.AppSettings["ConnectionString"].Trim();
            SiteURL = ConfigurationManager.AppSettings["SiteURL"].Trim();
            DEBUG = Convert.ToByte(ConfigurationManager.AppSettings["DEBUG"]) == 1;
            mailSection = (ConfigSections.MailSection)ConfigurationManager.GetSection("MailSection");
            paypalSection = (ConfigSections.PayPalSection)ConfigurationManager.GetSection("PayPalSection");
        }
        #endregion
    }
}

------------------------------------------------------------------------

** ConfigSections.cs **

using System;
using System.Configuration;

namespace ConfigSections
{
    public class Element : ConfigurationElement
    {
        public string value { get; private set; }

        protected override void DeserializeElement(System.Xml.XmlReader reader, bool serializeCollectionKey)
        {
            this.value = reader.ReadElementContentAs(typeof(string), null) as string;
        }
    }

    public class MailSection : ConfigurationSection
    {
        [ConfigurationProperty("From", IsRequired = true)]
        public Element From { get { return (Element)this["From"]; } }

        [ConfigurationProperty("To", IsRequired = true)]
        public Element To { get { return (Element)this["To"]; } }

        [ConfigurationProperty("Bcc", IsRequired = true)]
        public Element Bcc { get { return (Element)this["Bcc"]; } }

        [ConfigurationProperty("DisplayName", IsRequired = true)]
        public Element DisplayName { get { return (Element)this["DisplayName"]; } }

        [ConfigurationProperty("PORT", IsRequired = true)]
        public Element PORT { get { return (Element)this["PORT"]; } }

        [ConfigurationProperty("SMTP", IsRequired = true)]
        public Element SMTP { get { return (Element)this["SMTP"]; } }

        [ConfigurationProperty("UserName", IsRequired = true)]
        public Element UserName { get { return (Element)this["UserName"]; } }

        [ConfigurationProperty("UserPass", IsRequired = true)]
        public Element UserPass { get { return (Element)this["UserPass"]; } }

        [ConfigurationProperty("Encoding", IsRequired = true)]
        public Element Encoding { get { return (Element)this["Encoding"]; } }
    }

    public class PayPalSection : ConfigurationSection
    {
        [ConfigurationProperty("URL", IsRequired = true)]
        public Element URL { get { return (Element)this["URL"]; } }

        [ConfigurationProperty("Business", IsRequired = true)]
        public Element Business { get { return (Element)this["Business"]; } }

        [ConfigurationProperty("ItemName", IsRequired = true)]
        public Element ItemName { get { return (Element)this["ItemName"]; } }
    }
}

