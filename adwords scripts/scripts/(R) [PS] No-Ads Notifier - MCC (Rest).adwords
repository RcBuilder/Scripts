var MIDDLEWARE = 'http://ec2-52-62-203-30.ap-southeast-2.compute.amazonaws.com/api';
var EMAIL = 'william.bok@propertysuite.co.nz';

function main() {
  
  /*
   var callbackURL = GetCallbackURL('MC106035-45');
   NotifyPS(callbackURL, 'campaign', '123456', 'NO_ADS', '', 'Campaign with No Ads'); 
   return;
  */
  
  var htmlBuilderService = HTMLBuilderService();
  
  htmlBuilderService.add('<h2 style="direction:rtl;text-align:right;">Campaigns-Ads-Map</h2>');
  htmlBuilderService.add('<table cellspacing="10" cellpadding="10" border="1" style="direction:ltr;text-align:left;">');
  htmlBuilderService.add('<tr style="background-color:#888; color:#fff;">'+
                         '<th>Account Name</th>'+                         
                         '<th>Campaign Name</th>'+
                         '<th>Ads Quantity</th>'+                                                  
                         '</tr>');
  
  var accounts = MccApp.accounts().get();  
    while(accounts.hasNext())
    {
      var account = accounts.next();

      Logger.log('### account: %s ###', account.getName());  

      MccApp.select(account);
      ProcessAccount(account, htmlBuilderService);

      Logger.log('--------------------------');
    }
  
  try{                 
    Logger.log('send mail to %s', EMAIL);
    MailApp.sendEmail(EMAIL, 'No-Ads Notifier', '', {
      htmlBody: htmlBuilderService.get()
    });
  }
  catch(ex){
    Logger.log('exception occured: %s', ex.message);
  }
}

function ProcessAccount(account, htmlBuilderService){
  var accountName = AdWordsApp.currentAccount().getName();
  var campaigns = AdsApp.campaigns()
    .withCondition('Status = ENABLED')    
    .get();
  
  while(campaigns.hasNext()){
    var campaign = campaigns.next();
    var campaignId = campaign.getId().toString();
    var campaignName = campaign.getName();
    
    var ads = campaign.ads()
      .withCondition('Status = ENABLED')
      .withCondition('AdGroupStatus = ENABLED')
      .withCondition('CampaignStatus = ENABLED')
      .get();
    
    var numOfAds = ads.totalNumEntities();    
    Logger.log('campaign #%s has %s ads', campaignId, numOfAds);      
    
    htmlBuilderService.add('<tr' + (numOfAds == 0 ? ' style="background-color:red; color:#fff;"' : '') + '>'+ 
                         '<td>' + accountName + '</td>'+
                         '<td>' + campaign.getName() + '</td>'+
                         '<td>' + numOfAds + '</td>'+                                                  
                         '</tr>');
    
    if(numOfAds > 0) continue;
    
    var callbackURL = GetCallbackURL(campaignName);
    Logger.log('campaign: %s > callbackURL: %s', campaignName, callbackURL);
    
    if(!callbackURL){
      Logger.log('No callbackURL!!');
      continue;
    }
    
    NotifyPS(callbackURL, 'campaign', campaignId, 'NO_ADS', '', 'Campaign with No Ads');    
  }
}

// ------------------------------------------

function NotifyPS(callbackURL, entityName, entityId, status, reason, notes){
  var payload = {
    'id': entityId,
    'entity': entityName,
    'status': status,
    'message': reason,    
    'notes': notes
  };
  
  /// Logger.log(payload);
  /// callbackURL = 'https://webhook.site/f97dceb3-9133-496a-a69a-390a7dde68eb';
  
  var response = MakeRequest(callbackURL, 'post', 'application/json', payload, { 'X-apikey': 'w&82ps#Sh!Xt' });
  if(!response) return null;
  
  response = Utilities.jsonParse(response);
  Logger.log('status: %s', response.status);
  if(response.status == 'FAIL')   
  	Logger.log('%s', response);
}

function GetCallbackURL(campaignName){    
  try{
    var response = MakeRequest(MIDDLEWARE.concat('/properties/list/', campaignName, '?api_key=d7133010-4de1-437e-9f7c-083531aaf67a'), 'get', 'application/json');    
    if(!response) return null;  
    
    response = Utilities.jsonParse(response);
    return response.callbackUrl;
  }
  catch(e){ return null; }
}

// headers: { key, value }
// headers['apikey'] = 'xxxxxx';
function MakeRequest(url, method, contentType, payload, headers){
  if(!url) return null;
  
  var options = {
    'method' : method,
    'contentType': contentType,
    'payload' : payload || null
  };
  
  if(headers)    
      options.headers = headers; 
    
  var response = UrlFetchApp.fetch(url, options);
  var status_code = response.getResponseCode();
  Logger.log('%s %s > status code: %s', method, url, status_code);
  if(payload) Logger.log('%s', payload);
  
  return response;
}

// ------------------------------------------

var HTMLBuilderService = function(){
  var _html = '';
  
  return {
    add: function(content){
      _html += content;
    },
    get: function(){
      return _html;
    }
  };
}
