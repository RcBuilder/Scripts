var LABEL = 'Overspend';
var DEBUG = false;
var Tollerance = -0.3; // in the campaign currency 
var EMAIL = 'RcBuilder@walla.com';

function main() {
  var accounts = MccApp.accounts()
  .withCondition('LabelNames CONTAINS "' + LABEL + '"')
  .get();  
  
  while (accounts.hasNext()) {
    var account = accounts.next();
    MccApp.select(account);
    Logger.log('[#%s] %s', account.getCustomerId(), account.getName());  
    ProcessAccount();
   	Logger.log('---------------------'); 
  }   
}

function ProcessAccount(){
  var campaigns = AdWordsApp.campaigns()
  .withCondition('Status = ENABLED')
  ///.withCondition('LabelNames CONTAINS_ANY ["' + LABEL + '"]')
  .get();
  
  while (campaigns.hasNext()) {
	var campaign = campaigns.next();
	Logger.log('campaign: ' + campaign.getName()); 
    ProcessCampaign(campaign);
  }
}

function ProcessCampaign(campaign){
  var campaignName = campaign.getName();
  
  var startDate = campaign.getStartDate(); // {year, month, day}
  var endDate = campaign.getEndDate(); // {year, month, day}
  
  if(!endDate) {
  	Logger.log('%s', 'NO END DATE! skip...')
    return;
  }
  
  var dateRange = date2string(startDate) + ' to ' + date2string(endDate);
  
  var numOfDays = dateDiffInDays(startDate, endDate);
  ///Logger.log(numOfDays);
  
  var budget = campaign.getBudget().getAmount() * numOfDays;
  
  var stats = DEBUG ? new statsMock() : campaign.getStatsFor("ALL_TIME");  
  var cost = stats.getCost();
   
  Logger.log('campaign: %s (%s) -> cost: %s, budget: %s, tollerance: %s', campaignName, dateRange, cost, budget, Tollerance);
  
  var isOverspend = cost > (budget + Tollerance);
  if(!isOverspend) return;
  
  Logger.log('Overspend!');
  
  var htmlTemplate = 
    '<p>[#{0}] {4}</p>' +
  	'<p>cost: {1}</p>' +	
  	'<p>budget: {2}</p>' +
  	'<p>tollerance: {3}</p>'
  ;
  
  var html = htmlTemplate
  .replace('{0}', campaign.getId().toString())
  .replace('{1}', cost)
  .replace('{2}', budget)
  .replace('{3}', Tollerance)
  .replace('{4}', campaignName);
  
  Logger.log('pausing the campaign');
  campaign.pause();
  
  Logger.log('Sending email to %s...', EMAIL);
  MailApp.sendEmail(EMAIL, 'Overspend Campaign #' + campaignName, '', { 
    htmlBody: html
  });
}

function date2string(dt){
  if(!dt) return '';
  return dt.year + '-' + (dt.month < 10 ? ('0'+ dt.month) : dt.month) + '-' + (dt.day < 10 ? ('0'+ dt.day) : dt.day);	
}

function dateDiffInDays(dt1, dt2){  
  var ts = new Date(date2string(dt2)).getTime() - new Date(date2string(dt1)).getTime(); 
  return parseInt(ts / (24*60*60*1000));
}

//-------------------------------------------------------------------------------

/* MOCK*/

function statsMock(){
  return {
    getAverageCpc: function() { return 0; },
    getAverageCpm: function() { return 0; },
    getAverageCpv: function() { return 0; },
    getAveragePageviews: function() { return 0; },
    getAveragePosition: function() { return 0; },
    getAverageTimeOnSite: function() { return 0; },
    getBounceRate: function() { return 0; },
    getClicks: function() { return 0; },
    getConversionRate: function() { return 0; },
    getConversions: function() { return 0; },
    getCost: function() { return 0.6; },
    getCtr: function() { return 0; },
    getImpressions: function() { return 0; },
    getViewRate: function() { return 0; },
    getViews: function() { return 0; }
  }
}