
using the $emit and $broadcast allows us to communicate between controllers
which have no shared service.

this technique uses an event raise up or down the scopes hierarchy,
in addition, we can utilize the $rootScope (which is the root scope above all controllers) to comunicate 2 unrelated controllers 
note! all controllers are actualy childrens of the root and that's the relation

$emit vs $broadcast
-------------------
$emit dispatches an event upwards through the scope hierarchy.
$broadcast dispatches an event downwards to all child scopes.

$emit = up the chain 
$broadcast = down the chain

$on
---
listen to events

scopes
------
* $scope.$emit 
  raise the event for listenerers which has defined in the current scope or above it (parent scopes of the current scope)

* $scope.$broadcast 
  raise the event for ALL listenerers in the current scope or below (childrens of the current scope) 

* $rootScope.$emit 
  raise the event ONLY for listenerers which has defined in the $rootScope level
  note! this is the root level so it has no parents

* $rootScope.$broadcast 
  raise the event for ALL listenerers in all scopes
  note! this is the root level so every other scopes are childrens

---------------------------------------------------

exampe using:

<div ng-controller="controllerA">
    <h3>A</h3>
    <ul>
        <li ng-repeat="product in products">
            <div ng-include="'product.partial'"></div>
        </li>
    </ul>
</div>

<div ng-controller="controllerB">
    <h3>B</h3>
    <ul>
        <li ng-repeat="product in products">
            <div ng-include="'product.partial'"></div>
        </li>
    </ul>
</div>

<script type="text/ng-template" id="product.partial">
    <p>
        {{ product.name }}   
        <input type="button" ng-click="Transfer(product)" value="Transfer" />         
    </p>
</script>

--

var module = angular.module('my-app', []);

module.controller('controllerA', function ($scope, $rootScope, productsFactory) {
    $scope.products = [];

    productsFactory.getProducts(function (response) {
        $scope.products = response;
    });

    $scope.Transfer = function (product) {
        $rootScope.$broadcast('transferStarted', product);
    }

    $scope.$on('transferCompleted', function (event, product) {
		//alert('transferCompleted');

        var index = $scope.products.indexOf(product);                
        $scope.products.splice(index, 1);        
    });
});

module.controller('controllerB', function ($scope, $rootScope, productsFactory) {
    $scope.products = [];

    $scope.$on('transferStarted', function (event, product) {
        //alert('transferStarted');

        $scope.products.push(product);
        $rootScope.$broadcast('transferCompleted', product);
    });
});

module.factory('productsFactory', function ($http) {
    var products = [
        { name: 'product A', unitPrice: 300, stock: 1200 },
        { name: 'product B', unitPrice: 100, stock: 510 },
        { name: 'product C', unitPrice: 50, stock: 703 },
        { name: 'product D', unitPrice: 220, stock: 60 },
        { name: 'product E', unitPrice: 130, stock: 52 },
        { name: 'product F', unitPrice: 79, stock: 220 },
        { name: 'product G', unitPrice: 33, stock: 8000 }
    ];

    return {
        getProducts: function (onSuccess) {
            onSuccess(products);
        }
    };
});