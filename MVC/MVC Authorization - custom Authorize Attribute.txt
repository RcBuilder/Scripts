Custom Authorization:
---------------------

public class MyAuthorizeAttribute : AuthorizeAttribute {
    public override void OnAuthorization(AuthorizationContext filterContext) {
        var context = System.Web.HttpContext.Current;

        var lecturerId = BLL.Sessions.GetLecturer(context);
        var studentId = BLL.Sessions.GetStudent(context);
		
        if (lecturerId != -1) {
            var identity = new GenericIdentity(lecturerId.ToString(), "Lecturer");
            context.User = new GenericPrincipal(identity, new string[] { "role1", "role2", "Lecturers" });
        }
        else if (studentId != -1) {
            var identity = new GenericIdentity(studentId.ToString(), "Student");
            context.User = new GenericPrincipal(identity, new string[] { "role1", "role2", "Students" });
        }

        base.OnAuthorization(filterContext);
    }
}


[MyAuthorize(Roles = "Lecturers")]
public class CourseController : Controller {
     [AllowAnonymous]
     public ActionResult Index(int Id){ ... }

     public ActionResult Add(){ ... }

     [HttpPost]
     public ActionResult Add(Entities.Course course) { ... }  
}