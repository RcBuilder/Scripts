*** AreaRegistration ***
************************

Registration
------------
global.asax > Application_Start


- option1 -
protected void Application_Start(){
	AreaRegistration.RegisterAllAreas();
}

- option2 -
protected void Application_Start(){
	var adminArea = new Areas.Admin.AdminAreaRegistration();
	var adminContext = new AreaRegistrationContext(adminArea.AreaName, RouteTable.Routes);
	adminArea.RegisterArea(adminContext);

	var defaultArea = new Areas.Default.DefaultAreaRegistration();
	var defaultContext = new AreaRegistrationContext(defaultArea.AreaName, RouteTable.Routes);
	defaultArea.RegisterArea(defaultContext);
}

note:
we can specify the areas routes order! 

Routes Definition
-----------------

// AdminAreaRegistration:
public class AdminAreaRegistration : AreaRegistration {
    public override string AreaName {
        get {
            return "Admin";
        }
    }

    public override void RegisterArea(AreaRegistrationContext context) {
        context.MapRoute(
            name: "Admin.Coupons",
            url: "Admin/{controller}/{action}/{code}",
            defaults: new { },
            constraints: new { code = @"[A-Za-z0-9\-]{10}", controller = "Coupon" },
            namespaces: new string[] { "Website.Areas.Admin.Controllers" }
        );

        context.MapRoute(
            name: "Admin.Default",
            url: "Admin/{controller}/{action}/{id}",
            defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional },
            namespaces: new string[] { "Website.Areas.Admin.Controllers" }
        );
    }
}

-- 

public class DefaultAreaRegistration : AreaRegistration {
    public override string AreaName {
        get {
            return "Default";
        }
    }

    public override void RegisterArea(AreaRegistrationContext context)
    {
        context.MapRoute(
            name: "Pages",
            url: "Page/{name}",
            defaults: new { controller = "Page", action = "Index" },
            namespaces: new string[] { "Website.Areas.Default.Controllers" }
        );

        context.MapRoute(
            name: "Confirmation",
            url: "{controller}/{action}/{id}/{code}",
            defaults: new {  },
            constraints: new { id = @"\d+", controller = "Student|Lecturer", action = "Confirmation" },
            namespaces: new string[] { "Website.Areas.Default.Controllers" }
        );

        context.MapRoute(
            name: "EntityDetails",
            url: "{controller}/{id}",
            defaults: new { action = "Index" },
            constraints: new { id = @"\d+", controller = "Student|Lecturer|Course|Marathon|OnlineCourse" }, // [Student, Lecturer, Course, Marathon]
            namespaces: new string[] { "Website.Areas.Default.Controllers" }
        );

        context.MapRoute(
            name: "Default",
            url: "{controller}/{action}/{id}",
            defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional },
            namespaces: new string[] { "Website.Areas.Default.Controllers" }                
        );
    }
}

Settings
--------
- Namespaces:
  ControllerBuilder.Current.DefaultNamespaces.Add("Website.Areas.Default.Controllers");

  note! 
  add namespace for each registered area
  namespaces: new string[] { "Website.Areas.Default.Controllers" }
